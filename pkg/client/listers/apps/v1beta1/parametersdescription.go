/*
Copyright (C) 2022-2024 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/apecloud/kubeblocks/apis/apps/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ParametersDescriptionLister helps list ParametersDescriptions.
// All objects returned here must be treated as read-only.
type ParametersDescriptionLister interface {
	// List lists all ParametersDescriptions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ParametersDescription, err error)
	// Get retrieves the ParametersDescription from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.ParametersDescription, error)
	ParametersDescriptionListerExpansion
}

// parametersDescriptionLister implements the ParametersDescriptionLister interface.
type parametersDescriptionLister struct {
	indexer cache.Indexer
}

// NewParametersDescriptionLister returns a new ParametersDescriptionLister.
func NewParametersDescriptionLister(indexer cache.Indexer) ParametersDescriptionLister {
	return &parametersDescriptionLister{indexer: indexer}
}

// List lists all ParametersDescriptions in the indexer.
func (s *parametersDescriptionLister) List(selector labels.Selector) (ret []*v1beta1.ParametersDescription, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.ParametersDescription))
	})
	return ret, err
}

// Get retrieves the ParametersDescription from the index for a given name.
func (s *parametersDescriptionLister) Get(name string) (*v1beta1.ParametersDescription, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("parametersdescription"), name)
	}
	return obj.(*v1beta1.ParametersDescription), nil
}
